public static String getBestCombination(int time) {
        
        
        // standard method to count minutes (seconds up to 59)
        int minS = 0;
        int secS = time;        
        StringBuilder numS = new StringBuilder();
        while (secS >= 60) {
            secS -= 60;
            minS++;
        }
        //append 00 if the second or minute is 0, so the clock is right
        if (minS != 0) {
            numS.append(minS);
        }
        if (secS != 0) {
            if (secS < 10 && minS != 0) {
                numS.append("0");
            }
            numS.append(secS);
        } else {
            numS.append("00");
        }
        System.out.println("Standard minutes: " + minS + " and seconds: " + secS + " = " + numS);
        
        // alternative method to count minutes (seconds up to 99)
        int minA = 0;
        int secA = time;
        StringBuilder numA = new StringBuilder();
        while (secA >= 100) {
            secA -= 60;
            minA++;
        }
        //append 00 if the second or minute is 0, so the clock is right
        if (minA != 0) {
            numA.append(minA);
        }
        if (secA != 0) {
            if (secA < 10 && minA != 0) {
                numA.append("0");
            }
            numA.append(secA);
        } else {
            numA.append("00");
        }
        System.out.println("Alternative minutes: " + minA + " and seconds: " + secA + " = " + numA);
        
        //number of different moves on standard
        int movesS = 0;
        for (int i = 0; i < numS.length(); i++) {
            if (i + 1 < numS.length()) {
                if (numS.charAt(i) != numS.charAt(i+1)) {
                movesS++;
                }
            }
        }
        System.out.println("Moves from standard are: " + movesS++);
        
        //number of different moves on Alternative
        int movesA = 0;
        for (int i = 0; i < numA.length(); i++) {
            if (i + 1 < numA.length()) {
                if (numA.charAt(i) != numA.charAt(i+1)) {
                movesA++;
                }
            }
        }
        System.out.println("Moves from alternative are: " + movesA++);
        
        if (movesS < movesA) {
            System.out.println("Standard is the way for moves");
            return numS.toString();
        } else if (movesS > movesA) {
            System.out.println("Alternative is the way for moves");
            return numA.toString();
        } else if (numS.length() < numA.length()) {
            System.out.println("Standard is the way for length");
            return numS.toString();
        } else if (numS.length() > numA.length()){
            System.out.println("Alternative is the way for length");
            return numA.toString();
        } else if (numS.length() == numA.length() && movesS == movesA) {
            System.out.println("methods are the same, so pick the standard");
            return numS.toString();
        }
        
        return "MAINTENANCE";
    }
